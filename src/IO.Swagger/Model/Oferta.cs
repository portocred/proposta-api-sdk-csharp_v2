/* 
 * Gestão de Propostas
 *
 * API de Gestão de Propostas.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Entidade representando uma oferta simulada para uma proposta.
    /// </summary>
    [DataContract]
    public partial class Oferta :  IEquatable<Oferta>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets ExpiradaFaixaTarifaInclusao
        /// </summary>
        [DataMember(Name="expiradaFaixaTarifaInclusao", EmitDefaultValue=false)]
        public IndicativoSimNao? ExpiradaFaixaTarifaInclusao { get; set; }
        /// <summary>
        /// Gets or Sets SugeridoFaixaRetorno
        /// </summary>
        [DataMember(Name="sugeridoFaixaRetorno", EmitDefaultValue=false)]
        public IndicativoSimNao? SugeridoFaixaRetorno { get; set; }
        /// <summary>
        /// Gets or Sets TipoSimulacao
        /// </summary>
        [DataMember(Name="tipoSimulacao", EmitDefaultValue=false)]
        public TipoSimulacao? TipoSimulacao { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Oferta" /> class.
        /// </summary>
        /// <param name="IdOferta">Identificador da oferta..</param>
        /// <param name="OrigemOferta">Origem da oferta..</param>
        /// <param name="DataVencimentoPrimeiraParcela">Data de vencimento da 1ª parcela..</param>
        /// <param name="DataVencimentoUltimaParcela">Data de vencimento da última parcela..</param>
        /// <param name="CetAnual">Valor CET anual..</param>
        /// <param name="CetMensal">Valor CET mensal..</param>
        /// <param name="DataMovimento">Data do movimento..</param>
        /// <param name="CodigoPlano">Código do plano utilizada na simulação..</param>
        /// <param name="DescricaoPlano">Descrição do plano utilizado na simulação..</param>
        /// <param name="CodigoProduto">Código do produto utilizado na simulação..</param>
        /// <param name="DescricaoProduto">Descrição do produto utilizado na simulação..</param>
        /// <param name="DataEmissao">Data da emissão..</param>
        /// <param name="FinanciadoIndice">Valor financiado índice..</param>
        /// <param name="FinioFSeguro">Valor finio seguro..</param>
        /// <param name="IdProdutoSeguro">Identificador do produto do seguro..</param>
        /// <param name="ValorIOF">Valor Final do IOF..</param>
        /// <param name="Prazo">Prazo / Qtd de Parcelas utilizada na simulação..</param>
        /// <param name="ValorPrimeiraPrestacao">Valor da 1ª prestação..</param>
        /// <param name="Seguradora">seguradora..</param>
        /// <param name="Seguro">Valor do seguro..</param>
        /// <param name="ValorTAC">Valor do TAC..</param>
        /// <param name="ValorTaxa">Valor da Taxa..</param>
        /// <param name="ValorTaxaAnual">Valor da Taxa anual..</param>
        /// <param name="ValorCompra">Valor da compra. Resultante pela PMT ou utilizado no cálculo da simulação..</param>
        /// <param name="ValorCredito">Valor do crédito..</param>
        /// <param name="ValorFinanciado">Valor financiado..</param>
        /// <param name="ValorLiberado">Valor liberado..</param>
        /// <param name="ValorLiquidar">Valor a liquidar..</param>
        /// <param name="ValorParcela">Valor da parcela..</param>
        /// <param name="ValorSeguro">Valor Final do Seguro (se foi solicitado seguro)..</param>
        /// <param name="ValorTaxaInclusao">Valor da taxa de inclusão..</param>
        /// <param name="ValorTaxaRenovacao">Valor da taxa de renovação..</param>
        /// <param name="ValorTotal">Valor do total com Juros (soma de todas as PMTs)..</param>
        /// <param name="ValorTotalPST">Valor do total PST..</param>
        /// <param name="ExpiradaFaixaTarifaInclusao">ExpiradaFaixaTarifaInclusao.</param>
        /// <param name="SugeridoFaixaRetorno">SugeridoFaixaRetorno.</param>
        /// <param name="TipoSimulacao">TipoSimulacao.</param>
        public Oferta(string IdOferta = default(string), string OrigemOferta = default(string), DateTime? DataVencimentoPrimeiraParcela = default(DateTime?), DateTime? DataVencimentoUltimaParcela = default(DateTime?), double? CetAnual = default(double?), double? CetMensal = default(double?), DateTime? DataMovimento = default(DateTime?), string CodigoPlano = default(string), string DescricaoPlano = default(string), string CodigoProduto = default(string), string DescricaoProduto = default(string), DateTime? DataEmissao = default(DateTime?), double? FinanciadoIndice = default(double?), double? FinioFSeguro = default(double?), long? IdProdutoSeguro = default(long?), double? ValorIOF = default(double?), int? Prazo = default(int?), double? ValorPrimeiraPrestacao = default(double?), string Seguradora = default(string), double? Seguro = default(double?), double? ValorTAC = default(double?), double? ValorTaxa = default(double?), double? ValorTaxaAnual = default(double?), double? ValorCompra = default(double?), double? ValorCredito = default(double?), double? ValorFinanciado = default(double?), double? ValorLiberado = default(double?), double? ValorLiquidar = default(double?), double? ValorParcela = default(double?), double? ValorSeguro = default(double?), double? ValorTaxaInclusao = default(double?), double? ValorTaxaRenovacao = default(double?), double? ValorTotal = default(double?), double? ValorTotalPST = default(double?), IndicativoSimNao? ExpiradaFaixaTarifaInclusao = default(IndicativoSimNao?), IndicativoSimNao? SugeridoFaixaRetorno = default(IndicativoSimNao?), TipoSimulacao? TipoSimulacao = default(TipoSimulacao?))
        {
            this.IdOferta = IdOferta;
            this.OrigemOferta = OrigemOferta;
            this.DataVencimentoPrimeiraParcela = DataVencimentoPrimeiraParcela;
            this.DataVencimentoUltimaParcela = DataVencimentoUltimaParcela;
            this.CetAnual = CetAnual;
            this.CetMensal = CetMensal;
            this.DataMovimento = DataMovimento;
            this.CodigoPlano = CodigoPlano;
            this.DescricaoPlano = DescricaoPlano;
            this.CodigoProduto = CodigoProduto;
            this.DescricaoProduto = DescricaoProduto;
            this.DataEmissao = DataEmissao;
            this.FinanciadoIndice = FinanciadoIndice;
            this.FinioFSeguro = FinioFSeguro;
            this.IdProdutoSeguro = IdProdutoSeguro;
            this.ValorIOF = ValorIOF;
            this.Prazo = Prazo;
            this.ValorPrimeiraPrestacao = ValorPrimeiraPrestacao;
            this.Seguradora = Seguradora;
            this.Seguro = Seguro;
            this.ValorTAC = ValorTAC;
            this.ValorTaxa = ValorTaxa;
            this.ValorTaxaAnual = ValorTaxaAnual;
            this.ValorCompra = ValorCompra;
            this.ValorCredito = ValorCredito;
            this.ValorFinanciado = ValorFinanciado;
            this.ValorLiberado = ValorLiberado;
            this.ValorLiquidar = ValorLiquidar;
            this.ValorParcela = ValorParcela;
            this.ValorSeguro = ValorSeguro;
            this.ValorTaxaInclusao = ValorTaxaInclusao;
            this.ValorTaxaRenovacao = ValorTaxaRenovacao;
            this.ValorTotal = ValorTotal;
            this.ValorTotalPST = ValorTotalPST;
            this.ExpiradaFaixaTarifaInclusao = ExpiradaFaixaTarifaInclusao;
            this.SugeridoFaixaRetorno = SugeridoFaixaRetorno;
            this.TipoSimulacao = TipoSimulacao;
        }
        
        /// <summary>
        /// Identificador da oferta.
        /// </summary>
        /// <value>Identificador da oferta.</value>
        [DataMember(Name="idOferta", EmitDefaultValue=false)]
        public string IdOferta { get; set; }

        /// <summary>
        /// Origem da oferta.
        /// </summary>
        /// <value>Origem da oferta.</value>
        [DataMember(Name="origemOferta", EmitDefaultValue=false)]
        public string OrigemOferta { get; set; }

        /// <summary>
        /// Data de vencimento da 1ª parcela.
        /// </summary>
        /// <value>Data de vencimento da 1ª parcela.</value>
        [DataMember(Name="dataVencimentoPrimeiraParcela", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? DataVencimentoPrimeiraParcela { get; set; }

        /// <summary>
        /// Data de vencimento da última parcela.
        /// </summary>
        /// <value>Data de vencimento da última parcela.</value>
        [DataMember(Name="dataVencimentoUltimaParcela", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? DataVencimentoUltimaParcela { get; set; }

        /// <summary>
        /// Valor CET anual.
        /// </summary>
        /// <value>Valor CET anual.</value>
        [DataMember(Name="cetAnual", EmitDefaultValue=false)]
        public double? CetAnual { get; set; }

        /// <summary>
        /// Valor CET mensal.
        /// </summary>
        /// <value>Valor CET mensal.</value>
        [DataMember(Name="cetMensal", EmitDefaultValue=false)]
        public double? CetMensal { get; set; }

        /// <summary>
        /// Data do movimento.
        /// </summary>
        /// <value>Data do movimento.</value>
        [DataMember(Name="dataMovimento", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? DataMovimento { get; set; }

        /// <summary>
        /// Código do plano utilizada na simulação.
        /// </summary>
        /// <value>Código do plano utilizada na simulação.</value>
        [DataMember(Name="codigoPlano", EmitDefaultValue=false)]
        public string CodigoPlano { get; set; }

        /// <summary>
        /// Descrição do plano utilizado na simulação.
        /// </summary>
        /// <value>Descrição do plano utilizado na simulação.</value>
        [DataMember(Name="descricaoPlano", EmitDefaultValue=false)]
        public string DescricaoPlano { get; set; }

        /// <summary>
        /// Código do produto utilizado na simulação.
        /// </summary>
        /// <value>Código do produto utilizado na simulação.</value>
        [DataMember(Name="codigoProduto", EmitDefaultValue=false)]
        public string CodigoProduto { get; set; }

        /// <summary>
        /// Descrição do produto utilizado na simulação.
        /// </summary>
        /// <value>Descrição do produto utilizado na simulação.</value>
        [DataMember(Name="descricaoProduto", EmitDefaultValue=false)]
        public string DescricaoProduto { get; set; }

        /// <summary>
        /// Data da emissão.
        /// </summary>
        /// <value>Data da emissão.</value>
        [DataMember(Name="dataEmissao", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? DataEmissao { get; set; }

        /// <summary>
        /// Valor financiado índice.
        /// </summary>
        /// <value>Valor financiado índice.</value>
        [DataMember(Name="financiadoIndice", EmitDefaultValue=false)]
        public double? FinanciadoIndice { get; set; }

        /// <summary>
        /// Valor finio seguro.
        /// </summary>
        /// <value>Valor finio seguro.</value>
        [DataMember(Name="finioFSeguro", EmitDefaultValue=false)]
        public double? FinioFSeguro { get; set; }

        /// <summary>
        /// Identificador do produto do seguro.
        /// </summary>
        /// <value>Identificador do produto do seguro.</value>
        [DataMember(Name="idProdutoSeguro", EmitDefaultValue=false)]
        public long? IdProdutoSeguro { get; set; }

        /// <summary>
        /// Valor Final do IOF.
        /// </summary>
        /// <value>Valor Final do IOF.</value>
        [DataMember(Name="valorIOF", EmitDefaultValue=false)]
        public double? ValorIOF { get; set; }

        /// <summary>
        /// Prazo / Qtd de Parcelas utilizada na simulação.
        /// </summary>
        /// <value>Prazo / Qtd de Parcelas utilizada na simulação.</value>
        [DataMember(Name="prazo", EmitDefaultValue=false)]
        public int? Prazo { get; set; }

        /// <summary>
        /// Valor da 1ª prestação.
        /// </summary>
        /// <value>Valor da 1ª prestação.</value>
        [DataMember(Name="valorPrimeiraPrestacao", EmitDefaultValue=false)]
        public double? ValorPrimeiraPrestacao { get; set; }

        /// <summary>
        /// seguradora.
        /// </summary>
        /// <value>seguradora.</value>
        [DataMember(Name="seguradora", EmitDefaultValue=false)]
        public string Seguradora { get; set; }

        /// <summary>
        /// Valor do seguro.
        /// </summary>
        /// <value>Valor do seguro.</value>
        [DataMember(Name="seguro", EmitDefaultValue=false)]
        public double? Seguro { get; set; }

        /// <summary>
        /// Valor do TAC.
        /// </summary>
        /// <value>Valor do TAC.</value>
        [DataMember(Name="valorTAC", EmitDefaultValue=false)]
        public double? ValorTAC { get; set; }

        /// <summary>
        /// Valor da Taxa.
        /// </summary>
        /// <value>Valor da Taxa.</value>
        [DataMember(Name="valorTaxa", EmitDefaultValue=false)]
        public double? ValorTaxa { get; set; }

        /// <summary>
        /// Valor da Taxa anual.
        /// </summary>
        /// <value>Valor da Taxa anual.</value>
        [DataMember(Name="valorTaxaAnual", EmitDefaultValue=false)]
        public double? ValorTaxaAnual { get; set; }

        /// <summary>
        /// Valor da compra. Resultante pela PMT ou utilizado no cálculo da simulação.
        /// </summary>
        /// <value>Valor da compra. Resultante pela PMT ou utilizado no cálculo da simulação.</value>
        [DataMember(Name="valorCompra", EmitDefaultValue=false)]
        public double? ValorCompra { get; set; }

        /// <summary>
        /// Valor do crédito.
        /// </summary>
        /// <value>Valor do crédito.</value>
        [DataMember(Name="valorCredito", EmitDefaultValue=false)]
        public double? ValorCredito { get; set; }

        /// <summary>
        /// Valor financiado.
        /// </summary>
        /// <value>Valor financiado.</value>
        [DataMember(Name="valorFinanciado", EmitDefaultValue=false)]
        public double? ValorFinanciado { get; set; }

        /// <summary>
        /// Valor liberado.
        /// </summary>
        /// <value>Valor liberado.</value>
        [DataMember(Name="valorLiberado", EmitDefaultValue=false)]
        public double? ValorLiberado { get; set; }

        /// <summary>
        /// Valor a liquidar.
        /// </summary>
        /// <value>Valor a liquidar.</value>
        [DataMember(Name="valorLiquidar", EmitDefaultValue=false)]
        public double? ValorLiquidar { get; set; }

        /// <summary>
        /// Valor da parcela.
        /// </summary>
        /// <value>Valor da parcela.</value>
        [DataMember(Name="valorParcela", EmitDefaultValue=false)]
        public double? ValorParcela { get; set; }

        /// <summary>
        /// Valor Final do Seguro (se foi solicitado seguro).
        /// </summary>
        /// <value>Valor Final do Seguro (se foi solicitado seguro).</value>
        [DataMember(Name="valorSeguro", EmitDefaultValue=false)]
        public double? ValorSeguro { get; set; }

        /// <summary>
        /// Valor da taxa de inclusão.
        /// </summary>
        /// <value>Valor da taxa de inclusão.</value>
        [DataMember(Name="valorTaxaInclusao", EmitDefaultValue=false)]
        public double? ValorTaxaInclusao { get; set; }

        /// <summary>
        /// Valor da taxa de renovação.
        /// </summary>
        /// <value>Valor da taxa de renovação.</value>
        [DataMember(Name="valorTaxaRenovacao", EmitDefaultValue=false)]
        public double? ValorTaxaRenovacao { get; set; }

        /// <summary>
        /// Valor do total com Juros (soma de todas as PMTs).
        /// </summary>
        /// <value>Valor do total com Juros (soma de todas as PMTs).</value>
        [DataMember(Name="valorTotal", EmitDefaultValue=false)]
        public double? ValorTotal { get; set; }

        /// <summary>
        /// Valor do total PST.
        /// </summary>
        /// <value>Valor do total PST.</value>
        [DataMember(Name="valorTotalPST", EmitDefaultValue=false)]
        public double? ValorTotalPST { get; set; }




        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Oferta {\n");
            sb.Append("  IdOferta: ").Append(IdOferta).Append("\n");
            sb.Append("  OrigemOferta: ").Append(OrigemOferta).Append("\n");
            sb.Append("  DataVencimentoPrimeiraParcela: ").Append(DataVencimentoPrimeiraParcela).Append("\n");
            sb.Append("  DataVencimentoUltimaParcela: ").Append(DataVencimentoUltimaParcela).Append("\n");
            sb.Append("  CetAnual: ").Append(CetAnual).Append("\n");
            sb.Append("  CetMensal: ").Append(CetMensal).Append("\n");
            sb.Append("  DataMovimento: ").Append(DataMovimento).Append("\n");
            sb.Append("  CodigoPlano: ").Append(CodigoPlano).Append("\n");
            sb.Append("  DescricaoPlano: ").Append(DescricaoPlano).Append("\n");
            sb.Append("  CodigoProduto: ").Append(CodigoProduto).Append("\n");
            sb.Append("  DescricaoProduto: ").Append(DescricaoProduto).Append("\n");
            sb.Append("  DataEmissao: ").Append(DataEmissao).Append("\n");
            sb.Append("  FinanciadoIndice: ").Append(FinanciadoIndice).Append("\n");
            sb.Append("  FinioFSeguro: ").Append(FinioFSeguro).Append("\n");
            sb.Append("  IdProdutoSeguro: ").Append(IdProdutoSeguro).Append("\n");
            sb.Append("  ValorIOF: ").Append(ValorIOF).Append("\n");
            sb.Append("  Prazo: ").Append(Prazo).Append("\n");
            sb.Append("  ValorPrimeiraPrestacao: ").Append(ValorPrimeiraPrestacao).Append("\n");
            sb.Append("  Seguradora: ").Append(Seguradora).Append("\n");
            sb.Append("  Seguro: ").Append(Seguro).Append("\n");
            sb.Append("  ValorTAC: ").Append(ValorTAC).Append("\n");
            sb.Append("  ValorTaxa: ").Append(ValorTaxa).Append("\n");
            sb.Append("  ValorTaxaAnual: ").Append(ValorTaxaAnual).Append("\n");
            sb.Append("  ValorCompra: ").Append(ValorCompra).Append("\n");
            sb.Append("  ValorCredito: ").Append(ValorCredito).Append("\n");
            sb.Append("  ValorFinanciado: ").Append(ValorFinanciado).Append("\n");
            sb.Append("  ValorLiberado: ").Append(ValorLiberado).Append("\n");
            sb.Append("  ValorLiquidar: ").Append(ValorLiquidar).Append("\n");
            sb.Append("  ValorParcela: ").Append(ValorParcela).Append("\n");
            sb.Append("  ValorSeguro: ").Append(ValorSeguro).Append("\n");
            sb.Append("  ValorTaxaInclusao: ").Append(ValorTaxaInclusao).Append("\n");
            sb.Append("  ValorTaxaRenovacao: ").Append(ValorTaxaRenovacao).Append("\n");
            sb.Append("  ValorTotal: ").Append(ValorTotal).Append("\n");
            sb.Append("  ValorTotalPST: ").Append(ValorTotalPST).Append("\n");
            sb.Append("  ExpiradaFaixaTarifaInclusao: ").Append(ExpiradaFaixaTarifaInclusao).Append("\n");
            sb.Append("  SugeridoFaixaRetorno: ").Append(SugeridoFaixaRetorno).Append("\n");
            sb.Append("  TipoSimulacao: ").Append(TipoSimulacao).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Oferta);
        }

        /// <summary>
        /// Returns true if Oferta instances are equal
        /// </summary>
        /// <param name="input">Instance of Oferta to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Oferta input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IdOferta == input.IdOferta ||
                    (this.IdOferta != null &&
                    this.IdOferta.Equals(input.IdOferta))
                ) && 
                (
                    this.OrigemOferta == input.OrigemOferta ||
                    (this.OrigemOferta != null &&
                    this.OrigemOferta.Equals(input.OrigemOferta))
                ) && 
                (
                    this.DataVencimentoPrimeiraParcela == input.DataVencimentoPrimeiraParcela ||
                    (this.DataVencimentoPrimeiraParcela != null &&
                    this.DataVencimentoPrimeiraParcela.Equals(input.DataVencimentoPrimeiraParcela))
                ) && 
                (
                    this.DataVencimentoUltimaParcela == input.DataVencimentoUltimaParcela ||
                    (this.DataVencimentoUltimaParcela != null &&
                    this.DataVencimentoUltimaParcela.Equals(input.DataVencimentoUltimaParcela))
                ) && 
                (
                    this.CetAnual == input.CetAnual ||
                    (this.CetAnual != null &&
                    this.CetAnual.Equals(input.CetAnual))
                ) && 
                (
                    this.CetMensal == input.CetMensal ||
                    (this.CetMensal != null &&
                    this.CetMensal.Equals(input.CetMensal))
                ) && 
                (
                    this.DataMovimento == input.DataMovimento ||
                    (this.DataMovimento != null &&
                    this.DataMovimento.Equals(input.DataMovimento))
                ) && 
                (
                    this.CodigoPlano == input.CodigoPlano ||
                    (this.CodigoPlano != null &&
                    this.CodigoPlano.Equals(input.CodigoPlano))
                ) && 
                (
                    this.DescricaoPlano == input.DescricaoPlano ||
                    (this.DescricaoPlano != null &&
                    this.DescricaoPlano.Equals(input.DescricaoPlano))
                ) && 
                (
                    this.CodigoProduto == input.CodigoProduto ||
                    (this.CodigoProduto != null &&
                    this.CodigoProduto.Equals(input.CodigoProduto))
                ) && 
                (
                    this.DescricaoProduto == input.DescricaoProduto ||
                    (this.DescricaoProduto != null &&
                    this.DescricaoProduto.Equals(input.DescricaoProduto))
                ) && 
                (
                    this.DataEmissao == input.DataEmissao ||
                    (this.DataEmissao != null &&
                    this.DataEmissao.Equals(input.DataEmissao))
                ) && 
                (
                    this.FinanciadoIndice == input.FinanciadoIndice ||
                    (this.FinanciadoIndice != null &&
                    this.FinanciadoIndice.Equals(input.FinanciadoIndice))
                ) && 
                (
                    this.FinioFSeguro == input.FinioFSeguro ||
                    (this.FinioFSeguro != null &&
                    this.FinioFSeguro.Equals(input.FinioFSeguro))
                ) && 
                (
                    this.IdProdutoSeguro == input.IdProdutoSeguro ||
                    (this.IdProdutoSeguro != null &&
                    this.IdProdutoSeguro.Equals(input.IdProdutoSeguro))
                ) && 
                (
                    this.ValorIOF == input.ValorIOF ||
                    (this.ValorIOF != null &&
                    this.ValorIOF.Equals(input.ValorIOF))
                ) && 
                (
                    this.Prazo == input.Prazo ||
                    (this.Prazo != null &&
                    this.Prazo.Equals(input.Prazo))
                ) && 
                (
                    this.ValorPrimeiraPrestacao == input.ValorPrimeiraPrestacao ||
                    (this.ValorPrimeiraPrestacao != null &&
                    this.ValorPrimeiraPrestacao.Equals(input.ValorPrimeiraPrestacao))
                ) && 
                (
                    this.Seguradora == input.Seguradora ||
                    (this.Seguradora != null &&
                    this.Seguradora.Equals(input.Seguradora))
                ) && 
                (
                    this.Seguro == input.Seguro ||
                    (this.Seguro != null &&
                    this.Seguro.Equals(input.Seguro))
                ) && 
                (
                    this.ValorTAC == input.ValorTAC ||
                    (this.ValorTAC != null &&
                    this.ValorTAC.Equals(input.ValorTAC))
                ) && 
                (
                    this.ValorTaxa == input.ValorTaxa ||
                    (this.ValorTaxa != null &&
                    this.ValorTaxa.Equals(input.ValorTaxa))
                ) && 
                (
                    this.ValorTaxaAnual == input.ValorTaxaAnual ||
                    (this.ValorTaxaAnual != null &&
                    this.ValorTaxaAnual.Equals(input.ValorTaxaAnual))
                ) && 
                (
                    this.ValorCompra == input.ValorCompra ||
                    (this.ValorCompra != null &&
                    this.ValorCompra.Equals(input.ValorCompra))
                ) && 
                (
                    this.ValorCredito == input.ValorCredito ||
                    (this.ValorCredito != null &&
                    this.ValorCredito.Equals(input.ValorCredito))
                ) && 
                (
                    this.ValorFinanciado == input.ValorFinanciado ||
                    (this.ValorFinanciado != null &&
                    this.ValorFinanciado.Equals(input.ValorFinanciado))
                ) && 
                (
                    this.ValorLiberado == input.ValorLiberado ||
                    (this.ValorLiberado != null &&
                    this.ValorLiberado.Equals(input.ValorLiberado))
                ) && 
                (
                    this.ValorLiquidar == input.ValorLiquidar ||
                    (this.ValorLiquidar != null &&
                    this.ValorLiquidar.Equals(input.ValorLiquidar))
                ) && 
                (
                    this.ValorParcela == input.ValorParcela ||
                    (this.ValorParcela != null &&
                    this.ValorParcela.Equals(input.ValorParcela))
                ) && 
                (
                    this.ValorSeguro == input.ValorSeguro ||
                    (this.ValorSeguro != null &&
                    this.ValorSeguro.Equals(input.ValorSeguro))
                ) && 
                (
                    this.ValorTaxaInclusao == input.ValorTaxaInclusao ||
                    (this.ValorTaxaInclusao != null &&
                    this.ValorTaxaInclusao.Equals(input.ValorTaxaInclusao))
                ) && 
                (
                    this.ValorTaxaRenovacao == input.ValorTaxaRenovacao ||
                    (this.ValorTaxaRenovacao != null &&
                    this.ValorTaxaRenovacao.Equals(input.ValorTaxaRenovacao))
                ) && 
                (
                    this.ValorTotal == input.ValorTotal ||
                    (this.ValorTotal != null &&
                    this.ValorTotal.Equals(input.ValorTotal))
                ) && 
                (
                    this.ValorTotalPST == input.ValorTotalPST ||
                    (this.ValorTotalPST != null &&
                    this.ValorTotalPST.Equals(input.ValorTotalPST))
                ) && 
                (
                    this.ExpiradaFaixaTarifaInclusao == input.ExpiradaFaixaTarifaInclusao ||
                    (this.ExpiradaFaixaTarifaInclusao != null &&
                    this.ExpiradaFaixaTarifaInclusao.Equals(input.ExpiradaFaixaTarifaInclusao))
                ) && 
                (
                    this.SugeridoFaixaRetorno == input.SugeridoFaixaRetorno ||
                    (this.SugeridoFaixaRetorno != null &&
                    this.SugeridoFaixaRetorno.Equals(input.SugeridoFaixaRetorno))
                ) && 
                (
                    this.TipoSimulacao == input.TipoSimulacao ||
                    (this.TipoSimulacao != null &&
                    this.TipoSimulacao.Equals(input.TipoSimulacao))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IdOferta != null)
                    hashCode = hashCode * 59 + this.IdOferta.GetHashCode();
                if (this.OrigemOferta != null)
                    hashCode = hashCode * 59 + this.OrigemOferta.GetHashCode();
                if (this.DataVencimentoPrimeiraParcela != null)
                    hashCode = hashCode * 59 + this.DataVencimentoPrimeiraParcela.GetHashCode();
                if (this.DataVencimentoUltimaParcela != null)
                    hashCode = hashCode * 59 + this.DataVencimentoUltimaParcela.GetHashCode();
                if (this.CetAnual != null)
                    hashCode = hashCode * 59 + this.CetAnual.GetHashCode();
                if (this.CetMensal != null)
                    hashCode = hashCode * 59 + this.CetMensal.GetHashCode();
                if (this.DataMovimento != null)
                    hashCode = hashCode * 59 + this.DataMovimento.GetHashCode();
                if (this.CodigoPlano != null)
                    hashCode = hashCode * 59 + this.CodigoPlano.GetHashCode();
                if (this.DescricaoPlano != null)
                    hashCode = hashCode * 59 + this.DescricaoPlano.GetHashCode();
                if (this.CodigoProduto != null)
                    hashCode = hashCode * 59 + this.CodigoProduto.GetHashCode();
                if (this.DescricaoProduto != null)
                    hashCode = hashCode * 59 + this.DescricaoProduto.GetHashCode();
                if (this.DataEmissao != null)
                    hashCode = hashCode * 59 + this.DataEmissao.GetHashCode();
                if (this.FinanciadoIndice != null)
                    hashCode = hashCode * 59 + this.FinanciadoIndice.GetHashCode();
                if (this.FinioFSeguro != null)
                    hashCode = hashCode * 59 + this.FinioFSeguro.GetHashCode();
                if (this.IdProdutoSeguro != null)
                    hashCode = hashCode * 59 + this.IdProdutoSeguro.GetHashCode();
                if (this.ValorIOF != null)
                    hashCode = hashCode * 59 + this.ValorIOF.GetHashCode();
                if (this.Prazo != null)
                    hashCode = hashCode * 59 + this.Prazo.GetHashCode();
                if (this.ValorPrimeiraPrestacao != null)
                    hashCode = hashCode * 59 + this.ValorPrimeiraPrestacao.GetHashCode();
                if (this.Seguradora != null)
                    hashCode = hashCode * 59 + this.Seguradora.GetHashCode();
                if (this.Seguro != null)
                    hashCode = hashCode * 59 + this.Seguro.GetHashCode();
                if (this.ValorTAC != null)
                    hashCode = hashCode * 59 + this.ValorTAC.GetHashCode();
                if (this.ValorTaxa != null)
                    hashCode = hashCode * 59 + this.ValorTaxa.GetHashCode();
                if (this.ValorTaxaAnual != null)
                    hashCode = hashCode * 59 + this.ValorTaxaAnual.GetHashCode();
                if (this.ValorCompra != null)
                    hashCode = hashCode * 59 + this.ValorCompra.GetHashCode();
                if (this.ValorCredito != null)
                    hashCode = hashCode * 59 + this.ValorCredito.GetHashCode();
                if (this.ValorFinanciado != null)
                    hashCode = hashCode * 59 + this.ValorFinanciado.GetHashCode();
                if (this.ValorLiberado != null)
                    hashCode = hashCode * 59 + this.ValorLiberado.GetHashCode();
                if (this.ValorLiquidar != null)
                    hashCode = hashCode * 59 + this.ValorLiquidar.GetHashCode();
                if (this.ValorParcela != null)
                    hashCode = hashCode * 59 + this.ValorParcela.GetHashCode();
                if (this.ValorSeguro != null)
                    hashCode = hashCode * 59 + this.ValorSeguro.GetHashCode();
                if (this.ValorTaxaInclusao != null)
                    hashCode = hashCode * 59 + this.ValorTaxaInclusao.GetHashCode();
                if (this.ValorTaxaRenovacao != null)
                    hashCode = hashCode * 59 + this.ValorTaxaRenovacao.GetHashCode();
                if (this.ValorTotal != null)
                    hashCode = hashCode * 59 + this.ValorTotal.GetHashCode();
                if (this.ValorTotalPST != null)
                    hashCode = hashCode * 59 + this.ValorTotalPST.GetHashCode();
                if (this.ExpiradaFaixaTarifaInclusao != null)
                    hashCode = hashCode * 59 + this.ExpiradaFaixaTarifaInclusao.GetHashCode();
                if (this.SugeridoFaixaRetorno != null)
                    hashCode = hashCode * 59 + this.SugeridoFaixaRetorno.GetHashCode();
                if (this.TipoSimulacao != null)
                    hashCode = hashCode * 59 + this.TipoSimulacao.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
