/* 
 * Gestão de Propostas
 *
 * API de Gestão de Propostas.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Objeto de entrada para a alteração da proposta.
    /// </summary>
    [DataContract]
    public partial class AlteracaoPropostaRequest :  IEquatable<AlteracaoPropostaRequest>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets AcaoAlteracao
        /// </summary>
        [DataMember(Name="acaoAlteracao", EmitDefaultValue=false)]
        public AcaoAlteracaoProposta? AcaoAlteracao { get; set; }
        /// <summary>
        /// Gets or Sets UploadConfirmado
        /// </summary>
        [DataMember(Name="uploadConfirmado", EmitDefaultValue=false)]
        public IndicativoSimNao? UploadConfirmado { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlteracaoPropostaRequest" /> class.
        /// </summary>
        /// <param name="AcaoAlteracao">AcaoAlteracao.</param>
        /// <param name="UploadConfirmado">UploadConfirmado.</param>
        /// <param name="PreEfetivacaoProposta">PreEfetivacaoProposta.</param>
        /// <param name="Proposta">Proposta.</param>
        public AlteracaoPropostaRequest(AcaoAlteracaoProposta? AcaoAlteracao = default(AcaoAlteracaoProposta?), IndicativoSimNao? UploadConfirmado = default(IndicativoSimNao?), PreEfetivacaoPropostaRequest PreEfetivacaoProposta = default(PreEfetivacaoPropostaRequest), Proposta Proposta = default(Proposta))
        {
            this.AcaoAlteracao = AcaoAlteracao;
            this.UploadConfirmado = UploadConfirmado;
            this.PreEfetivacaoProposta = PreEfetivacaoProposta;
            this.Proposta = Proposta;
        }
        


        /// <summary>
        /// Gets or Sets PreEfetivacaoProposta
        /// </summary>
        [DataMember(Name="preEfetivacaoProposta", EmitDefaultValue=false)]
        public PreEfetivacaoPropostaRequest PreEfetivacaoProposta { get; set; }

        /// <summary>
        /// Gets or Sets Proposta
        /// </summary>
        [DataMember(Name="proposta", EmitDefaultValue=false)]
        public Proposta Proposta { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AlteracaoPropostaRequest {\n");
            sb.Append("  AcaoAlteracao: ").Append(AcaoAlteracao).Append("\n");
            sb.Append("  UploadConfirmado: ").Append(UploadConfirmado).Append("\n");
            sb.Append("  PreEfetivacaoProposta: ").Append(PreEfetivacaoProposta).Append("\n");
            sb.Append("  Proposta: ").Append(Proposta).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AlteracaoPropostaRequest);
        }

        /// <summary>
        /// Returns true if AlteracaoPropostaRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of AlteracaoPropostaRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AlteracaoPropostaRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcaoAlteracao == input.AcaoAlteracao ||
                    (this.AcaoAlteracao != null &&
                    this.AcaoAlteracao.Equals(input.AcaoAlteracao))
                ) && 
                (
                    this.UploadConfirmado == input.UploadConfirmado ||
                    (this.UploadConfirmado != null &&
                    this.UploadConfirmado.Equals(input.UploadConfirmado))
                ) && 
                (
                    this.PreEfetivacaoProposta == input.PreEfetivacaoProposta ||
                    (this.PreEfetivacaoProposta != null &&
                    this.PreEfetivacaoProposta.Equals(input.PreEfetivacaoProposta))
                ) && 
                (
                    this.Proposta == input.Proposta ||
                    (this.Proposta != null &&
                    this.Proposta.Equals(input.Proposta))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcaoAlteracao != null)
                    hashCode = hashCode * 59 + this.AcaoAlteracao.GetHashCode();
                if (this.UploadConfirmado != null)
                    hashCode = hashCode * 59 + this.UploadConfirmado.GetHashCode();
                if (this.PreEfetivacaoProposta != null)
                    hashCode = hashCode * 59 + this.PreEfetivacaoProposta.GetHashCode();
                if (this.Proposta != null)
                    hashCode = hashCode * 59 + this.Proposta.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
